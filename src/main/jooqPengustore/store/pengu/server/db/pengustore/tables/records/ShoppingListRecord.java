/*
 * This file is generated by jOOQ.
 */
package store.pengu.server.db.pengustore.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import store.pengu.server.db.pengustore.tables.ShoppingList;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShoppingListRecord extends UpdatableRecordImpl<ShoppingListRecord> implements Record4<ULong, String, Double, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>shopping_list.id</code>.
     */
    public ShoppingListRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>shopping_list.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>shopping_list.name</code>.
     */
    public ShoppingListRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>shopping_list.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>shopping_list.latitude</code>.
     */
    public ShoppingListRecord setLatitude(Double value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>shopping_list.latitude</code>.
     */
    public Double getLatitude() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>shopping_list.longitude</code>.
     */
    public ShoppingListRecord setLongitude(Double value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>shopping_list.longitude</code>.
     */
    public Double getLongitude() {
        return (Double) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<ULong, String, Double, Double> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<ULong, String, Double, Double> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return ShoppingList.SHOPPING_LIST.ID;
    }

    @Override
    public Field<String> field2() {
        return ShoppingList.SHOPPING_LIST.NAME;
    }

    @Override
    public Field<Double> field3() {
        return ShoppingList.SHOPPING_LIST.LATITUDE;
    }

    @Override
    public Field<Double> field4() {
        return ShoppingList.SHOPPING_LIST.LONGITUDE;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Double component3() {
        return getLatitude();
    }

    @Override
    public Double component4() {
        return getLongitude();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Double value3() {
        return getLatitude();
    }

    @Override
    public Double value4() {
        return getLongitude();
    }

    @Override
    public ShoppingListRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public ShoppingListRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ShoppingListRecord value3(Double value) {
        setLatitude(value);
        return this;
    }

    @Override
    public ShoppingListRecord value4(Double value) {
        setLongitude(value);
        return this;
    }

    @Override
    public ShoppingListRecord values(ULong value1, String value2, Double value3, Double value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ShoppingListRecord
     */
    public ShoppingListRecord() {
        super(ShoppingList.SHOPPING_LIST);
    }

    /**
     * Create a detached, initialised ShoppingListRecord
     */
    public ShoppingListRecord(ULong id, String name, Double latitude, Double longitude) {
        super(ShoppingList.SHOPPING_LIST);

        setId(id);
        setName(name);
        setLatitude(latitude);
        setLongitude(longitude);
    }
}
