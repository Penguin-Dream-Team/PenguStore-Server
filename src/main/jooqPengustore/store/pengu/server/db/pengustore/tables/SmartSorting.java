/*
 * This file is generated by jOOQ.
 */
package store.pengu.server.db.pengustore.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import store.pengu.server.db.pengustore.DefaultSchema;
import store.pengu.server.db.pengustore.Indexes;
import store.pengu.server.db.pengustore.Keys;
import store.pengu.server.db.pengustore.tables.records.SmartSortingRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmartSorting extends TableImpl<SmartSortingRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>smart_sorting</code>
     */
    public static final SmartSorting SMART_SORTING = new SmartSorting();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SmartSortingRecord> getRecordType() {
        return SmartSortingRecord.class;
    }

    /**
     * The column <code>smart_sorting.row_number</code>.
     */
    public final TableField<SmartSortingRecord, String> ROW_NUMBER = createField(DSL.name("row_number"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>smart_sorting.col_number</code>.
     */
    public final TableField<SmartSortingRecord, String> COL_NUMBER = createField(DSL.name("col_number"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>smart_sorting.cell_val</code>.
     */
    public final TableField<SmartSortingRecord, Integer> CELL_VAL = createField(DSL.name("cell_val"), SQLDataType.INTEGER.nullable(false), this, "");

    private SmartSorting(Name alias, Table<SmartSortingRecord> aliased) {
        this(alias, aliased, null);
    }

    private SmartSorting(Name alias, Table<SmartSortingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>smart_sorting</code> table reference
     */
    public SmartSorting(String alias) {
        this(DSL.name(alias), SMART_SORTING);
    }

    /**
     * Create an aliased <code>smart_sorting</code> table reference
     */
    public SmartSorting(Name alias) {
        this(alias, SMART_SORTING);
    }

    /**
     * Create a <code>smart_sorting</code> table reference
     */
    public SmartSorting() {
        this(DSL.name("smart_sorting"), null);
    }

    public <O extends Record> SmartSorting(Table<O> child, ForeignKey<O, SmartSortingRecord> key) {
        super(child, key, SMART_SORTING);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SMART_SORTING_COL_NUMBER);
    }

    @Override
    public UniqueKey<SmartSortingRecord> getPrimaryKey() {
        return Keys.KEY_SMART_SORTING_PRIMARY;
    }

    @Override
    public List<UniqueKey<SmartSortingRecord>> getKeys() {
        return Arrays.<UniqueKey<SmartSortingRecord>>asList(Keys.KEY_SMART_SORTING_PRIMARY);
    }

    @Override
    public List<ForeignKey<SmartSortingRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SmartSortingRecord, ?>>asList(Keys.SMART_SORTING_IBFK_1, Keys.SMART_SORTING_IBFK_2);
    }

    private transient Products _smartSortingIbfk_1;
    private transient Products _smartSortingIbfk_2;

    public Products smartSortingIbfk_1() {
        if (_smartSortingIbfk_1 == null)
            _smartSortingIbfk_1 = new Products(this, Keys.SMART_SORTING_IBFK_1);

        return _smartSortingIbfk_1;
    }

    public Products smartSortingIbfk_2() {
        if (_smartSortingIbfk_2 == null)
            _smartSortingIbfk_2 = new Products(this, Keys.SMART_SORTING_IBFK_2);

        return _smartSortingIbfk_2;
    }

    @Override
    public SmartSorting as(String alias) {
        return new SmartSorting(DSL.name(alias), this);
    }

    @Override
    public SmartSorting as(Name alias) {
        return new SmartSorting(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SmartSorting rename(String name) {
        return new SmartSorting(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SmartSorting rename(Name name) {
        return new SmartSorting(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
