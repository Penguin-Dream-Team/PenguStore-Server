/*
 * This file is generated by jOOQ.
 */
package store.pengu.server.db.pengustore.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import store.pengu.server.db.pengustore.tables.PantryXUser;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PantryXUserRecord extends UpdatableRecordImpl<PantryXUserRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pantry_x_user.pantry_id</code>.
     */
    public PantryXUserRecord setPantryId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>pantry_x_user.pantry_id</code>.
     */
    public Long getPantryId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pantry_x_user.user_id</code>.
     */
    public PantryXUserRecord setUserId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>pantry_x_user.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PantryXUser.PANTRY_X_USER.PANTRY_ID;
    }

    @Override
    public Field<Long> field2() {
        return PantryXUser.PANTRY_X_USER.USER_ID;
    }

    @Override
    public Long component1() {
        return getPantryId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getPantryId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public PantryXUserRecord value1(Long value) {
        setPantryId(value);
        return this;
    }

    @Override
    public PantryXUserRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public PantryXUserRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PantryXUserRecord
     */
    public PantryXUserRecord() {
        super(PantryXUser.PANTRY_X_USER);
    }

    /**
     * Create a detached, initialised PantryXUserRecord
     */
    public PantryXUserRecord(Long pantryId, Long userId) {
        super(PantryXUser.PANTRY_X_USER);

        setPantryId(pantryId);
        setUserId(userId);
    }
}
