/*
 * This file is generated by jOOQ.
 */
package store.pengu.server.db.pengustore.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import store.pengu.server.db.pengustore.tables.PantryProducts;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PantryProductsRecord extends UpdatableRecordImpl<PantryProductsRecord> implements Record4<ULong, ULong, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pantry_products.pantry_id</code>.
     */
    public PantryProductsRecord setPantryId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>pantry_products.pantry_id</code>.
     */
    public ULong getPantryId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>pantry_products.product_id</code>.
     */
    public PantryProductsRecord setProductId(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>pantry_products.product_id</code>.
     */
    public ULong getProductId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>pantry_products.have_qty</code>.
     */
    public PantryProductsRecord setHaveQty(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>pantry_products.have_qty</code>.
     */
    public Integer getHaveQty() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>pantry_products.want_qty</code>.
     */
    public PantryProductsRecord setWantQty(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>pantry_products.want_qty</code>.
     */
    public Integer getWantQty() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<ULong, ULong> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<ULong, ULong, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<ULong, ULong, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return PantryProducts.PANTRY_PRODUCTS.PANTRY_ID;
    }

    @Override
    public Field<ULong> field2() {
        return PantryProducts.PANTRY_PRODUCTS.PRODUCT_ID;
    }

    @Override
    public Field<Integer> field3() {
        return PantryProducts.PANTRY_PRODUCTS.HAVE_QTY;
    }

    @Override
    public Field<Integer> field4() {
        return PantryProducts.PANTRY_PRODUCTS.WANT_QTY;
    }

    @Override
    public ULong component1() {
        return getPantryId();
    }

    @Override
    public ULong component2() {
        return getProductId();
    }

    @Override
    public Integer component3() {
        return getHaveQty();
    }

    @Override
    public Integer component4() {
        return getWantQty();
    }

    @Override
    public ULong value1() {
        return getPantryId();
    }

    @Override
    public ULong value2() {
        return getProductId();
    }

    @Override
    public Integer value3() {
        return getHaveQty();
    }

    @Override
    public Integer value4() {
        return getWantQty();
    }

    @Override
    public PantryProductsRecord value1(ULong value) {
        setPantryId(value);
        return this;
    }

    @Override
    public PantryProductsRecord value2(ULong value) {
        setProductId(value);
        return this;
    }

    @Override
    public PantryProductsRecord value3(Integer value) {
        setHaveQty(value);
        return this;
    }

    @Override
    public PantryProductsRecord value4(Integer value) {
        setWantQty(value);
        return this;
    }

    @Override
    public PantryProductsRecord values(ULong value1, ULong value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PantryProductsRecord
     */
    public PantryProductsRecord() {
        super(PantryProducts.PANTRY_PRODUCTS);
    }

    /**
     * Create a detached, initialised PantryProductsRecord
     */
    public PantryProductsRecord(ULong pantryId, ULong productId, Integer haveQty, Integer wantQty) {
        super(PantryProducts.PANTRY_PRODUCTS);

        setPantryId(pantryId);
        setProductId(productId);
        setHaveQty(haveQty);
        setWantQty(wantQty);
    }
}
