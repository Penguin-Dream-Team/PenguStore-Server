/*
 * This file is generated by jOOQ.
 */
package store.pengu.server.db.pengustore.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import store.pengu.server.db.pengustore.tables.Suggestions;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SuggestionsRecord extends UpdatableRecordImpl<SuggestionsRecord> implements Record3<ULong, ULong, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>suggestions.row_number</code>.
     */
    public SuggestionsRecord setRowNumber(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>suggestions.row_number</code>.
     */
    public ULong getRowNumber() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>suggestions.col_number</code>.
     */
    public SuggestionsRecord setColNumber(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>suggestions.col_number</code>.
     */
    public ULong getColNumber() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>suggestions.cell_val</code>.
     */
    public SuggestionsRecord setCellVal(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>suggestions.cell_val</code>.
     */
    public Integer getCellVal() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<ULong, ULong> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<ULong, ULong, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<ULong, ULong, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return Suggestions.SUGGESTIONS.ROW_NUMBER;
    }

    @Override
    public Field<ULong> field2() {
        return Suggestions.SUGGESTIONS.COL_NUMBER;
    }

    @Override
    public Field<Integer> field3() {
        return Suggestions.SUGGESTIONS.CELL_VAL;
    }

    @Override
    public ULong component1() {
        return getRowNumber();
    }

    @Override
    public ULong component2() {
        return getColNumber();
    }

    @Override
    public Integer component3() {
        return getCellVal();
    }

    @Override
    public ULong value1() {
        return getRowNumber();
    }

    @Override
    public ULong value2() {
        return getColNumber();
    }

    @Override
    public Integer value3() {
        return getCellVal();
    }

    @Override
    public SuggestionsRecord value1(ULong value) {
        setRowNumber(value);
        return this;
    }

    @Override
    public SuggestionsRecord value2(ULong value) {
        setColNumber(value);
        return this;
    }

    @Override
    public SuggestionsRecord value3(Integer value) {
        setCellVal(value);
        return this;
    }

    @Override
    public SuggestionsRecord values(ULong value1, ULong value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SuggestionsRecord
     */
    public SuggestionsRecord() {
        super(Suggestions.SUGGESTIONS);
    }

    /**
     * Create a detached, initialised SuggestionsRecord
     */
    public SuggestionsRecord(ULong rowNumber, ULong colNumber, Integer cellVal) {
        super(Suggestions.SUGGESTIONS);

        setRowNumber(rowNumber);
        setColNumber(colNumber);
        setCellVal(cellVal);
    }
}
