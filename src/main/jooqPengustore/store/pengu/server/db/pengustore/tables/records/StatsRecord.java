/*
 * This file is generated by jOOQ.
 */
package store.pengu.server.db.pengustore.tables.records;


import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;

import store.pengu.server.db.pengustore.tables.Stats;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatsRecord extends TableRecordImpl<StatsRecord> implements Record4<Integer, Integer, Double, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>stats.num_items</code>.
     */
    public StatsRecord setNumItems(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>stats.num_items</code>.
     */
    public Integer getNumItems() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stats.time</code>.
     */
    public StatsRecord setTime(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>stats.time</code>.
     */
    public Integer getTime() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>stats.latitude</code>.
     */
    public StatsRecord setLatitude(Double value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>stats.latitude</code>.
     */
    public Double getLatitude() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>stats.longitude</code>.
     */
    public StatsRecord setLongitude(Double value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>stats.longitude</code>.
     */
    public Double getLongitude() {
        return (Double) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Double, Double> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Double, Double> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Stats.STATS.NUM_ITEMS;
    }

    @Override
    public Field<Integer> field2() {
        return Stats.STATS.TIME;
    }

    @Override
    public Field<Double> field3() {
        return Stats.STATS.LATITUDE;
    }

    @Override
    public Field<Double> field4() {
        return Stats.STATS.LONGITUDE;
    }

    @Override
    public Integer component1() {
        return getNumItems();
    }

    @Override
    public Integer component2() {
        return getTime();
    }

    @Override
    public Double component3() {
        return getLatitude();
    }

    @Override
    public Double component4() {
        return getLongitude();
    }

    @Override
    public Integer value1() {
        return getNumItems();
    }

    @Override
    public Integer value2() {
        return getTime();
    }

    @Override
    public Double value3() {
        return getLatitude();
    }

    @Override
    public Double value4() {
        return getLongitude();
    }

    @Override
    public StatsRecord value1(Integer value) {
        setNumItems(value);
        return this;
    }

    @Override
    public StatsRecord value2(Integer value) {
        setTime(value);
        return this;
    }

    @Override
    public StatsRecord value3(Double value) {
        setLatitude(value);
        return this;
    }

    @Override
    public StatsRecord value4(Double value) {
        setLongitude(value);
        return this;
    }

    @Override
    public StatsRecord values(Integer value1, Integer value2, Double value3, Double value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StatsRecord
     */
    public StatsRecord() {
        super(Stats.STATS);
    }

    /**
     * Create a detached, initialised StatsRecord
     */
    public StatsRecord(Integer numItems, Integer time, Double latitude, Double longitude) {
        super(Stats.STATS);

        setNumItems(numItems);
        setTime(time);
        setLatitude(latitude);
        setLongitude(longitude);
    }
}
