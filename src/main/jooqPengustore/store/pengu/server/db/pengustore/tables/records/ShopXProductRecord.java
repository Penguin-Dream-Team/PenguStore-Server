/*
 * This file is generated by jOOQ.
 */
package store.pengu.server.db.pengustore.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import store.pengu.server.db.pengustore.tables.ShopXProduct;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShopXProductRecord extends UpdatableRecordImpl<ShopXProductRecord> implements Record3<Long, Long, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>shop_x_product.shop_id</code>.
     */
    public ShopXProductRecord setShopId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>shop_x_product.shop_id</code>.
     */
    public Long getShopId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>shop_x_product.product_id</code>.
     */
    public ShopXProductRecord setProductId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>shop_x_product.product_id</code>.
     */
    public Long getProductId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>shop_x_product.price</code>.
     */
    public ShopXProductRecord setPrice(Double value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>shop_x_product.price</code>.
     */
    public Double getPrice() {
        return (Double) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Double> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Double> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ShopXProduct.SHOP_X_PRODUCT.SHOP_ID;
    }

    @Override
    public Field<Long> field2() {
        return ShopXProduct.SHOP_X_PRODUCT.PRODUCT_ID;
    }

    @Override
    public Field<Double> field3() {
        return ShopXProduct.SHOP_X_PRODUCT.PRICE;
    }

    @Override
    public Long component1() {
        return getShopId();
    }

    @Override
    public Long component2() {
        return getProductId();
    }

    @Override
    public Double component3() {
        return getPrice();
    }

    @Override
    public Long value1() {
        return getShopId();
    }

    @Override
    public Long value2() {
        return getProductId();
    }

    @Override
    public Double value3() {
        return getPrice();
    }

    @Override
    public ShopXProductRecord value1(Long value) {
        setShopId(value);
        return this;
    }

    @Override
    public ShopXProductRecord value2(Long value) {
        setProductId(value);
        return this;
    }

    @Override
    public ShopXProductRecord value3(Double value) {
        setPrice(value);
        return this;
    }

    @Override
    public ShopXProductRecord values(Long value1, Long value2, Double value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ShopXProductRecord
     */
    public ShopXProductRecord() {
        super(ShopXProduct.SHOP_X_PRODUCT);
    }

    /**
     * Create a detached, initialised ShopXProductRecord
     */
    public ShopXProductRecord(Long shopId, Long productId, Double price) {
        super(ShopXProduct.SHOP_X_PRODUCT);

        setShopId(shopId);
        setProductId(productId);
        setPrice(price);
    }
}
